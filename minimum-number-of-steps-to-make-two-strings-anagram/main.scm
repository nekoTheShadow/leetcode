(define (min-steps s t)
    (define n (string-length s))
    (define c (make-vector 26 0))
    (let loop1 ((i 0))
        (if (< i n)
            (let ((x1 (- (char->integer (string-ref s i)) (char->integer #\a)))
                  (x2 (- (char->integer (string-ref t i)) (char->integer #\a))))
                (vector-set! c x1 (+ (vector-ref c x1) 1))
                (vector-set! c x2 (- (vector-ref c x2) 1))
                (loop1 (+ i 1)))
            (let loop2 ((j 0) (sum 0))
                (if (< j 26)
                    (loop2 (+ j 1) (+ sum (abs (vector-ref c j))))
                    (/ sum 2))))))
